apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services' // Firebase'i etkinleştir

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    autolinkLibrariesWithApp()
}


/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.panama"
    defaultConfig {
        applicationId "com.panama"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // Firebase için Gerekli Bağımlılıklar
    implementation platform('com.google.firebase:firebase-bom:33.9.0') // Firebase BoM (Versiyon yönetimi için)
    implementation 'com.google.firebase:firebase-firestore' // Firestore veritabanı
    implementation 'com.google.firebase:firebase-auth' // Firebase Authentication (Opsiyonel)
}

project.ext.vectoricons = [
        iconFontNames: [
                'AntDesign.ttf',
                'Entypo.ttf',
                'EvilIcons.ttf',
                'Feather.ttf',
                'FontAwesome.ttf',
                'FontAwesome5_Brands.ttf',
                'FontAwesome5_Regular.ttf',
                'FontAwesome5_Solid.ttf',
                'Fontisto.ttf',
                'Foundation.ttf',
                'Ionicons.ttf',
                'MaterialCommunityIcons.ttf',
                'MaterialIcons.ttf',
                'Octicons.ttf',
                'SimpleLineIcons.ttf',
                'Zocial.ttf',
        ]
        // Name of the font files you want to copy
]

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply plugin: 'com.google.gms.google-services'
